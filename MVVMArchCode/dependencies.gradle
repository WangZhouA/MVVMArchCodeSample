ext {
    mvvmConfig = new ConfigSlurper().parse(new File("./mvvm-config.groovy").toURI().toURL())

    SysConfig = [
            compileSdkVersion: mvvmConfig.SDKVersion.compileSdkVersion,
            minSdkVersion    : mvvmConfig.SDKVersion.minSdkVersion,
            targetSdkVersion : mvvmConfig.SDKVersion.targetSdkVersion
    ]

    Versions = [
            glideVersion  : "4.11.0",
            room          : "2.2.4",
            retrofit2     : "2.7.2",
            rxLifecycle   : '2.2.2',
            bindingAdapter: '4.0.0',
            lifecycleVer  : '2.2.0'
    ]

    Deps = [

            // 官方支持库
            appcompat                 : "androidx.appcompat:appcompat:1.1.0",
            recyclerView              : "androidx.recyclerview:recyclerview:1.1.0",
            material                  : "com.google.android.material:material:1.1.0",
            swiperefreshlayout        : "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0",

            constraintLayout          : "androidx.constraintlayout:constraintlayout:2.0.0-beta7",

            paging                    : "androidx.paging:paging-runtime:2.1.1",
            viewPager2                : "androidx.viewpager2:viewpager2:1.0.0",

            // ViewModel
            viewModel                 : "androidx.lifecycle:lifecycle-viewmodel:${Versions.lifecycleVer}",
            // LiveData
            liveData                  : "androidx.lifecycle:lifecycle-livedata:${Versions.lifecycleVer}",
            // Lifecycles only (without ViewModel or LiveData)
            lifecycle                 : "androidx.lifecycle:lifecycle-runtime:${Versions.lifecycleVer}",
            viewModelSavedState       : "androidx.lifecycle:lifecycle-viewmodel-savedstate:${Versions.lifecycleVer}",
            // 使用了 Java8，则可以替代 lifecycle-compiler
            lifecycleJava8            : "androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycleVer}",
            lifecycleProcess          : "androidx.lifecycle:lifecycle-process:2.2.0",

            // 数据库
            roomRuntime               : "androidx.room:room-runtime:$Versions.room",
            roomCompiler              : "androidx.room:room-compiler:$Versions.room",
            roomRxJava                : "androidx.room:room-rxjava2:$Versions.room",

            // debugImplementation，可以在debug阶段通过浏览器看到数据库
            debugDB                   : "com.amitshekhar.android:debug-db:1.0.6",

            // 网络
            retrofit2                 : "com.squareup.retrofit2:retrofit:$Versions.retrofit2",
            retrofit2RxJava2          : "com.squareup.retrofit2:adapter-rxjava2:$Versions.retrofit2",

            // 图片加载
            glide                     : "com.github.bumptech.glide:glide:$Versions.glideVersion",
            glideCompiler             : "com.github.bumptech.glide:compiler:$Versions.glideVersion",

            gson                      : "com.google.code.gson:gson:2.8.6",
            gsonConverter             : "com.squareup.retrofit2:converter-gson:2.7.2",

            // Rx
            rxAndroid2                : "io.reactivex.rxjava2:rxandroid:2.1.1",
            rxJava2                   : "io.reactivex.rxjava2:rxjava:2.2.10",
            rxLifecycle               : "com.trello.rxlifecycle2:rxlifecycle:$Versions.rxLifecycle",
            rxLifecycleComponents     : "com.trello.rxlifecycle2:rxlifecycle-components:$Versions.rxLifecycle",
            rxBinding                 : "com.jakewharton.rxbinding2:rxbinding:2.2.0",

            // 内存泄露
            leakCanary2               : 'com.squareup.leakcanary:leakcanary-android:2.2',

            // 绑定库
            bindingAdapter            : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:${Versions.bindingAdapter}",
            bindingAdapterRv          : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:${Versions.bindingAdapter}",
            bindingAdapterVp2         : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-viewpager2:${Versions.bindingAdapter}"

    ]
}

/**
 * 添加依赖库的源
 * @param handler repositories
 */
static def addRepository(RepositoryHandler handler) {
    handler.maven { url 'https://maven.aliyun.com/repository/google' }
    handler.maven { url 'https://maven.aliyun.com/repository/jcenter' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    handler.maven { url "https://www.jitpack.io" }
    handler.maven { url "https://dl.bintray.com/tencentqcloudterminal/maven" }
    handler.mavenCentral()
}

static def curTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

static void checkMVVMConfigProperty(Object o) {
    if (!(o instanceof Boolean)) {
        throw new RuntimeException("mvvm-config.groovy 配置文件是否缺少了某个属性？属性列表需要和 MVVMArchCode/mvvm-config.groovy.template 文件保持一致")
    }
}

// 添加到全局的变量中
ext.addRepository = this.&addRepository
ext.curTime = this.&curTime
ext.checkMVVMConfigProperty = this.&checkMVVMConfigProperty
